# Generated by Django 2.2.6 on 2020-07-10 08:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_applicant', models.BooleanField(default=False)),
                ('is_educ', models.BooleanField(default=False)),
                ('is_tsc', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Post_vacancy',
            fields=[
                ('subjects', models.CharField(choices=[('BIO/PHY', 'BIO/PHY'), ('MATH/PHYC', 'MATH/PHYC'), ('KIS/FASIHI', 'KIS/FASIHI'), ('HIST/CRE', 'HIST/CRE'), ('ENG/LIT', 'ENG/LIT'), ('BIO/AGRIC', 'BIO/AGRIC'), ('MATH/BST', 'MATH/BST'), ('COMPUTER', 'COMPUTER')], max_length=15, unique=True)),
                ('advert', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Advert No')),
                ('descrip', models.TextField(verbose_name='Description')),
                ('num_req', models.PositiveIntegerField(verbose_name='Number Required')),
                ('start', models.DateField(blank=True)),
                ('end', models.DateField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gstudent',
            fields=[
                ('n_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('reg_id', models.CharField(max_length=15)),
                ('f_name', models.CharField(max_length=15)),
                ('l_name', models.CharField(max_length=15)),
                ('course', models.CharField(max_length=300)),
                ('award', models.IntegerField(choices=[('PICK AWARD', 'PICK AWARD'), ("Master's Degree", (('35', 'First Class'), ('30', 'Second Class Upper'), ('25', 'Second Class Lower'), ('20', 'Pass'))), ("Bachelor's Degree", (('35', 'First Class'), ('30', 'Second Class Upper'), ('25', 'Second Class Lower'), ('20', 'Pass'))), ('Diploma', (('25', 'Distinction'), ('20', 'Credits'), ('15', 'Pass')))])),
                ('kcse', models.CharField(choices=[('KCSE GRADE', 'KCSE GRADE'), ('6', 'A'), ('5', 'A-'), ('4', 'B+'), ('3', 'B'), ('2', 'B-'), ('1', 'C+'), ('0', 'Below C+')], max_length=15)),
                ('yog', models.CharField(max_length=15)),
                ('inst_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Educ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeIn', models.CharField(choices=[(0, 'University'), (1, 'Technical Institute'), (2, 'College')], max_length=200, null=True, verbose_name='Type of Institution')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Name of Institution')),
                ('user', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('advert', models.CharField(max_length=15)),
                ('tsc_no', models.CharField(max_length=50, unique=True, verbose_name='TSC No')),
                ('uid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=50, verbose_name='Surname')),
                ('m_name', models.CharField(max_length=50, verbose_name='Middle Name')),
                ('l_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('id_no', models.CharField(max_length=50, unique=True, verbose_name='ID No')),
                ('image_id', models.FileField(blank=True, upload_to='id/%Y/%m/%d', verbose_name='Upload ID')),
                ('award', models.CharField(choices=[('PICK AWARD', 'PICK AWARD'), ("Master's Degree", (('35', 'First Class'), ('30', 'Second Class Upper'), ('25', 'Second Class Lower'), ('20', 'Pass'))), ("Bachelor's Degree", (('35', 'First Class'), ('30', 'Second Class Upper'), ('25', 'Second Class Lower'), ('20', 'Pass'))), ('Diploma', (('25', 'Distinction'), ('20', 'Credits'), ('15', 'Pass')))], max_length=50, verbose_name='Level And Award')),
                ('kcse', models.CharField(choices=[('KCSE GRADE', 'KCSE GRADE'), ('6', 'A'), ('5', 'A-'), ('4', 'B+'), ('3', 'B'), ('2', 'B-'), ('1', 'C+'), ('0', 'Below C+')], max_length=50, verbose_name='KCSE Grade')),
                ('image_cert', models.FileField(blank=True, upload_to='cert_college/%Y/%m/%d', verbose_name='Upload College Certificate')),
                ('image_certKC', models.FileField(blank=True, upload_to='cert_kcse/%Y/%m/%d', verbose_name='Upload KCSE Certificate')),
                ('break_in', models.CharField(choices=[('0', 'NO'), ('YES', (('0', 'Resignation'), ('0', 'Further Studies'), ('-1', 'Dismissal')))], max_length=50, verbose_name='Have you ever had a Service Break in?')),
                ('co_curriculum', models.CharField(choices=[('1', 'Yes'), ('0', 'No')], max_length=50)),
                ('image_co', models.FileField(blank=True, upload_to='image_co/%Y/%m/%d', verbose_name='Upload co_curriculum Certificate')),
                ('leadership', models.CharField(choices=[('1', 'Yes'), ('0', 'No')], max_length=50)),
                ('image_lead', models.FileField(blank=True, upload_to='image_lead/%Y/%m/%d', verbose_name='Upload leadership Certificate')),
                ('duration', models.CharField(choices=[('10', 'Less than a year'), ('25', '2 years'), ('30', '3 years'), ('35', '4 years'), ('40', '5 years'), ('45', '6 years'), ('50', '7 years'), ('55', '8 years'), ('60', 'Above 9 Years')], max_length=50, verbose_name='Duration Before Employment')),
                ('email', models.EmailField(max_length=254)),
                ('contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('cv', models.FileField(blank=True, upload_to='cv/%Y/%m/%d')),
                ('total', models.PositiveIntegerField()),
                ('institutionA', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Educ')),
                ('vacancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Post_vacancy')),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('f_name', models.CharField(max_length=15)),
                ('l_name', models.CharField(max_length=15)),
                ('image', models.ImageField(blank=True, upload_to='employer/%Y/%m/%d', verbose_name='Upload Profile Photo')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Contact Phone Number', max_length=128, region=None)),
                ('cv', models.FileField(blank=True, upload_to='cv/%Y/%m/%d', verbose_name='Upload CV')),
                ('user', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
